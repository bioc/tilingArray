%\VignetteIndexEntry{Workflow for processing tiling array data}
%\VignetteDepends{Biobase}
%\VignetteKeywords{Expression Analysis}
%\VignettePackage{tilingArray}

\documentclass[11pt]{article}
\usepackage{color}
\definecolor{darkblue}{rgb}{0.0,0.0,0.75}
\usepackage[%
baseurl={http://www.bioconductor.org},%
pdftitle={Overview over the workflow for processing tiling 
array data: RNA hybridizations and finding new transcripts},%
pdfauthor={Wolfgang Huber},%
pdfsubject={tilingArray},%
pdfkeywords={Bioconductor},%
pagebackref,bookmarks,colorlinks,linkcolor=darkblue,citecolor=darkblue,%
pagecolor=darkblue,raiselinks,plainpages,pdftex]{hyperref}

\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\filename}[1]{\texttt{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{\textit{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rscript}[1]{\textit{#1}}

\newcommand{\myincfig}[3]{%
  \begin{figure}[htbp]
    \begin{center}
      \includegraphics[width=#2]{#1}
      \caption{\label{#1}#3}
    \end{center}
  \end{figure}
}

\begin{document}

%------------------------------------------------------------
\title{Overview over the workflow for processing tiling 
array data: RNA hybridizations and finding new transcripts}
%------------------------------------------------------------
\author{Wolfgang Huber}
\maketitle
\tableofcontents

%--------------------------------------------------
\section{Introduction}
%--------------------------------------------------
The data processing tasks in the following typically require a lot of CPU time
(in the order of hours or days) and memory (several Gigabytes). Many of tasks
will therefore usually be performed in scripts rather than in interactive
sessions. Also, they are spliced in several smaller steps, to be able to
examine intermediate results. Compute-heavy scripts (that in some cases can be
run in parallel) are separated with visualization-oriented scripts for
the analysis of (intermediate) results.

Intermediate results are stored and recoverd with the \Rfunction{save} and
\Rfunction{load} commands. The data types that are used are in many cases
matrices, lists, dataframes. The design is ``good enough'' to work, but as the
package matures and is re-used in different projects, it is foreseen but these
data structures will evolve, and some of them will undoubtedly benefit from
being implemented as proper S4 classes.

This vignette is not complete. For detailed questions, please contact the
author, or bear with me for a subsequent, more complete version.

%--------------------------------------------------
\section{Reading the CEL files}
%--------------------------------------------------
This is done by the script \Rscript{readcels.R}. It uses the function
\Rfunction{read.affybatch} from the \Rpackage{affy} package. It expects a
sample annotation file (``phenoData'') table, and a number of CEL files. It
creates the object of class \Rclass{exprSet} \Robject{x}, which is saved in
the file \filename{x.Rdata}.

Reading several CEL files with 2560x2560 probes each can take tens of minutes
to hours and require Gigabytes of RAM. Currently, the script does not allow
for incremental reading, that is, if another CEL file is added to the project,
the whole set of previous CEL files also needs to be imported again, to create
a new object \Robject{x} and a new file \filename{x.Rdata}.


%--------------------------------------------------
\section{Segmentation}
%--------------------------------------------------
This is done by the script \Rscript{segment.R}.

%--------------------------------------------------
\section{Scoring the segments}
%--------------------------------------------------
This is done by the script \Rscript{scoreSegments.R}.

%--------------------------------------------------
\section{Categorizing the segments}
%--------------------------------------------------
This is done by the script \Rscript{tableSegments.R}.

%--------------------------------------------------
\section{UTR mapping}
%--------------------------------------------------
This is done by the script \Rscript{utrmap.R}.


\end{document}


