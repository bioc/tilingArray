%\VignetteIndexEntry{tilingArray - demo segmentation}
%\VignetteDepends{tilingArray}
%\VignetteKeywords{segmentation}
%\VignettePackage{tilingArray}

\documentclass[11pt]{article}
\usepackage{geometry}\usepackage{color}
\definecolor{darkblue}{rgb}{0.0,0.0,0.75}
\usepackage[%
baseurl={http://www.bioconductor.org},%
pdftitle={Segmentation demo},%
pdfauthor={Wolfgang Huber},%
pdfsubject={tilingArray},%
pdfkeywords={Bioconductor},%
pagebackref,bookmarks,colorlinks,linkcolor=darkblue,citecolor=darkblue,%
pagecolor=darkblue,raiselinks,plainpages,pdftex]{hyperref}

%------------------------------------------------------------
% newcommand
%------------------------------------------------------------
\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{{\small\texttt{#1}}}

\newcommand{\myincfig}[3]{%
  \begin{figure}[htbp]
    \begin{center}
      \includegraphics[width=#2]{#1}
      \caption{\label{#1}#3}
    \end{center}
  \end{figure}
}

\begin{document}

%------------------------------------------------------------
\title{Segmentation demo}
%------------------------------------------------------------
\author{Wolfgang Huber}
\maketitle
\tableofcontents

\section{Introduction}
This script presents a demo of the segmentation function
on the \Rpackage{davidTiling} data.

<<setup, results=hide>>=
options(error=recover, warn=0)
graphics.off()

library("tilingArray")
library("davidTiling")
if(!exists("davidTiling"))
  data("davidTiling")
if(!exists("probeAnno"))
  data("probeAnno")
@ 

%--------------------------------------------------
\section{Normalization}
%--------------------------------------------------
Please see the vignette \textit{Assessing signal/noise ratio before
and after normalization} (\texttt{assessNorm.Rnw}) for explanation.
<<normalization>>=
xn = cache("xn", {
  nc = as.integer(2560)
  PMind = rep(seq(as.integer(1), nc-as.integer(3), by=as.integer(2)), each=nc)*nc + (1:nc)
  MMind = PMind + nc

  ispm = rep(FALSE, nc*nc)
  ispm[PMind] = TRUE
  isbg = (probeAnno$probeReverse$no_feature=="no" &
          probeAnno$probeDirect$no_feature=="no" &
          ispm)
  isRNA = davidTiling$nucleicAcid %in% c("poly(A) RNA","total RNA")
  isDNA = davidTiling$nucleicAcid %in% "genomic DNA"
  stopifnot(sum(isRNA)==5, sum(isDNA)==3)
  normalizeByReference(davidTiling[,isRNA], davidTiling[,isDNA], 
                       pm=PMind, background=isbg)
})
pData(xn)[, 2, drop=FALSE]
@ 


%--------------------------------------------------
\section{Segmentation}
%--------------------------------------------------

\subsection{Selecting the probes in along-chromosome order}
Extract for all probes that map to the "+" strand of chromosome 1  their
start and end coordinate, and their index in the exprs(davidTiling)
data matrix.  Sort them by midpoint.

<<prbs>>=
chrstrd = "1.+"
what = c("start", "end", "index", "unique")
prbs = do.call("data.frame", mget(paste(chrstrd, what, sep="."), probeAnno))
colnames(prbs) = what
prbs$mid = (prbs$start+prbs$end)/2
prbs = prbs[order(prbs$mid), ]
@ 

We throw out the missing (\Robject{NA}) values:
<<throwOutNA>>=
numna = rowSums(is.na(exprs(xn)[ prbs$ind, ]))
stopifnot(all(numna %in% c(0, ncol(xn))))
prbs = prbs[numna==0,]
@ 

%--------------------------------------------------
\subsubsection{Avoid oversampling}
<<sampleStep>>=
sprb = prbs[ sampleStep(prbs$mid, step=7), ]
@ 

<<histprobs, fig=TRUE, include=FALSE, width=6, height=7>>=
par(mfrow=c(3,1))
hist(prbs$mid, col="mistyrose", 100, main="(a)")
barplot(table(diff(prbs$mid)), main="(b)")
barplot(table(diff(sprb$mid)), main="(c)")
@ 
%
\myincfig{segmentation-histprobs}{0.7\textwidth}{% 
(a):
Histogram of probe midpoints along the chromosome.  There are some
probe dense regions in particular around 160,000.  The sequence of
that region is repeated multiple times in the genome, and due to the
chip design, there are also a lot of probes (more than necessary) for that region.
(b): histogram of differences between probe midpoints (\Robject{prbs\$mid}).
The intention of the chip design was to have a regular spacing of 8 bases.
In some cases, the spacing is wider, probably due to updates in the 
genome sequence between when the chip was designed and 
when probes were re-aligned. In  many cases, it is tighter with multiple 
probes for the same target sequence, or only 1 or 2 bases offset. This occurs 
in the regions of duplicated sequence.
(c): histogram of differences between probe midpoints after sampling
(\Robject{sprb\$mid})
}

%--------------------------------------------------
\subsection{Call the segmentation algorithm}
The segmentation algorithm needs two parameters, \Robject{maxseg}, the
maximum number of segments that the algorithm is going to consider,
and \Robject{maxk}, the maximum length per segment of individual
segments. The algorithm will calculate all optimal segmentations with
$1, 2, \ldots, \mbox{maxseg}$ segments.  Note that \Robject{maxk} is
measured in number of data points, not in genomic coordinates.  The
choice that we make here corresponds to an \emph{average} length per
segment of 1500 bases.  Our choice of the parameter \Robject{maxk}
corresponds to a maximum segment length of about $7.5 \times 3,000 =
22,500$ bases.
%
<<nseg, print=TRUE>>=
nseg = round(sprb$end[nrow(sprb)]/1500)
@ 
%
<<segment>>=
segw = cache("segw", {
  y = exprs(xn)[sprb$ind, xn$nucleicAcid=="poly(A) RNA", drop=FALSE]
  segw = segment(y, maxseg=nseg, maxk=3000)
  segw@x = sprb$mid
  segw@flag = sprb$unique
  segw
})
@ 
%
We also add additional information to the object that was not used for
the actual segmentation, but will be useful for the visualization:
into the slot \Robject{x}, the $x$-coordinates of the probes, 
and into the slot \Robject{flag}, the uniqueness status of the probes 
(0 iff the probe has exactly one match in the genome).

Having to access the \Robject{x} and \Robject{flag} slots directly, in the
code above, is a bit unelegant; I will probably provide accessor
functions in subsequent versions of the package.

%--------------------------------------------------
\subsection{Calculate confidence intervals}
This is simply a call to the \Rfunction{confint} method of the 
\Rclass{segmentation} class.
%
<<confint>>=
segwi = cache("segw",
  confint(segw, parm=nseg)
)
@ 

Now we are ready to have a look at the result via the \Rfunction{plot} method
of the \Rclass{segmentation} class. The plot is shown in Figure~\ref{segmentation-plotseg}.
%
<<plotseg, fig=TRUE, include=FALSE, width=8, height=4, eps=FALSE>>=
plot(segwi, nseg, pch=".", xlim=c(0, 40000))
@ 
\myincfig{segmentation-plotseg}{\textwidth}{% 
Segmentation with confidence intervals.
}

%--------------------------------------------------
\subsection{Using the \Rfunction{plotAlongChrom} function for more elaborate displays.}

Since the data in the \Rpackage{davidTiling} package is
strand-specific, we can do the segmentation for the ``-'' strand as
well and produce the along-chromosome plot shown in
Figure~\ref{segmentation-plotAlongChrom}. We run the same computations as
above (code not shown) to obtain the object \Robject{segci}.
%
<<segci, echo=FALSE, results=hide>>=
myfun = function(chrstrd) {
  what = c("start", "end", "index", "unique")
  prbs = do.call("data.frame", mget(paste(chrstrd, what, sep="."), probeAnno))
  colnames(prbs) = what
  prbs$mid = (prbs$start+prbs$end)/2
  prbs = prbs[order(prbs$mid), ]

  numna = rowSums(is.na(exprs(xn)[ prbs$ind, ]))
  stopifnot(all(numna %in% c(0, ncol(xn))))
  prbs = prbs[numna==0,]

  sprb = prbs[ sampleStep(prbs$mid, step=7), ]
  nseg = round(sprb$end[nrow(sprb)]/1500)

  y = exprs(xn)[sprb$ind, xn$nucleicAcid=="poly(A) RNA", drop=FALSE]
  s = segment(y, maxseg=nseg, maxk=3000)
  s@x = sprb$mid
  s@flag = sprb$unique

  confint(s, parm=nseg)
}

segci = cache("segci", myfun("1.-"))
@

The function \Rfunction{plotAlongChrom} accepts an environment as its
first argument which is expected to contain objects of class
\Rclass{segmentation} with names given by 
\Robject{paste(chr, c("+", "-"), sep=".")}, where \Robject{chr} is the
chromosome identifier.
%
<<plotAlongChrom, fig=TRUE, include=FALSE, width=8, height=4>>=
data("gff")
segObj = new.env(parent = baseenv())
assign("1.+", segwi, segObj)
assign("1.-", segci, segObj)
plotAlongChrom(segObj, chr=1, coord = 1000*c(101.5, 115),
               gff = gff, doLegend=FALSE)
@ 
%
\myincfig{segmentation-plotAlongChrom}{\textwidth}{% 
Along-chromosome plot similar to the one shown in the paper~\cite{David2006}.}



\begin{thebibliography}{10}

\bibitem{David2006}
Lior David, Wolfgang Huber, Marina Granovskaia, Joern Toedling, Curtis J. Palm, Lee Bofkin, Ted Jones,
Ronald W. Davis, and Lars M. Steinmetz
\newblock A high-resolution map of transcription in the
yeast genome.
\newblock \textit{PNAS}, 2006.

\end{thebibliography}
\end{document}





          
